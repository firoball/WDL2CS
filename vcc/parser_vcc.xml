<?xml version="1.0" encoding="utf-8"?>
<VCC>
    <CODETYPE value="C#"/>
    <PARSERTYPE value="LALR(1)"/>
    <SCANNER>
        <READ value="(?i)IFDEF" token="IFDEF" color="#E1FFFF"/>
        <READ value=";" token="Char59" color="#E1FFFF"/>
        <READ value="(?i)IFNDEF" token="IFNDEF" color="#E1FFFF"/>
        <READ value="(?i)IFELSE" token="IFELSE" color="#E1FFFF"/>
        <READ value="(?i)ENDIF" token="ENDIF" color="#E1FFFF"/>
        <READ value="(?i)DEFINE" token="DEFINE" color="#E1FFFF"/>
        <READ value="(?i)UNDEF" token="UNDEF" color="#E1FFFF"/>
        <READ value="(?i)INCLUDE" token="INCLUDE" color="#E1FFFF"/>
        <READ value="\{" token="Char123" color="#E1FFFF"/>
        <READ value="\}" token="Char125" color="#E1FFFF"/>
        <READ value=":" token="Char58" color="#E1FFFF"/>
        <READ value="\|\|" token="Char124Char124" color="#E1FFFF"/>
        <READ value="&amp;&amp;" token="Char38Char38" color="#E1FFFF"/>
        <READ value="\|" token="Char124" color="#E1FFFF"/>
        <READ value="\^" token="Char94" color="#E1FFFF"/>
        <READ value="&amp;" token="Char38" color="#E1FFFF"/>
        <READ value="\(" token="Char40" color="#E1FFFF"/>
        <READ value="\)" token="Char41" color="#E1FFFF"/>
        <READ value="!=" token="Char33Char61" color="#E1FFFF"/>
        <READ value="==" token="Char61Char61" color="#E1FFFF"/>
        <READ value="&lt;" token="Char60" color="#E1FFFF"/>
        <READ value="&lt;=" token="Char60Char61" color="#E1FFFF"/>
        <READ value="&gt;" token="Char62" color="#E1FFFF"/>
        <READ value="&gt;=" token="Char62Char61" color="#E1FFFF"/>
        <READ value="\+" token="Char43" color="#E1FFFF"/>
        <READ value="\-" token="Char45" color="#E1FFFF"/>
        <READ value="%" token="Char37" color="#E1FFFF"/>
        <READ value="\*" token="Char42" color="#E1FFFF"/>
        <READ value="/" token="Char47" color="#E1FFFF"/>
        <READ value="!" token="Char33" color="#E1FFFF"/>
        <READ value="(?i)RULE" token="RULE" color="#E1FFFF"/>
        <READ value="\*[\s\t\x00]*=" token="Char42Char61" color="#E1FFFF"/>
        <READ value="\+[\s\t\x00]*=" token="Char43Char61" color="#E1FFFF"/>
        <READ value="\-[\s\t\x00]*=" token="Char45Char61" color="#E1FFFF"/>
        <READ value="/[\s\t\x00]*=" token="Char47Char61" color="#E1FFFF"/>
        <READ value="=" token="Char61" color="#E1FFFF"/>
        <READ value="(?i)ELSE" token="ELSE" color="#E1FFFF"/>
        <READ value="(?i)IF" token="IF" color="#E1FFFF"/>
        <READ value="(?i)WHILE" token="WHILE" color="#E1FFFF"/>
        <READ value="\." token="Char46" color="#E1FFFF"/>
        <READ value="(?i)NULL" token="NULL" color="#E1FFFF"/>
        <READ value="(?i)(EACH_SEC|IF_(AE|ALT|ANYKEY|APO|BKSL|BKSP|BRACKL|BRACKR|CAL|CAR|COMMA|CTRL|CUD|CUL|CUR|CUU|DEL|END|EQUALS|ESC|HOME|INS|JOY4|LEFT|LOAD|MIDDLE|MINUS|MSTOP|OE|PAUSE|PERIOD|PGDN|PGUP|PLUS|RIGHT|SEMIC|SLASH|SPACE|START|SZ|TAB|TAST|UE|F(1[0-2]|[1-9])|[0-9A-Z])|LAYERS|MESSAGES|PANELS)" token="event" color="#E1FFFF"/>
        <READ value="(?i)(VIDEO|NEXUS|LIGHT_ANGLE|IBANK|DRUMBANK|MIDI_PITCH|BIND|MAPFILE|SAVEDIR|PATH|DITHER|SAVE_KEYS|REMOTE_KEYS)" token="global" color="#E1FFFF"/>
        <READ value="(?i)(MODEL|SOUND|MUSIC|FLIC|BMAP|OVLY|FONT)" token="asset" color="#E1FFFF"/>
        <READ value="(?i)(OVERLAY|PANEL|PALETTE|REGION|SKILL|STRING|SYNONYM|TEXTURE|TEXT|VIEW|WALL|WAY)" token="object" color="#E1FFFF"/>
        <READ value="(?i)(ACTION|RULES)" token="function" color="#E1FFFF"/>
        <READ value="(?i)(ACOS|COS|ATAN|TAN|SIGN|INT|EXP|LOG10|LOG2|LOG)" token="math" color="#E1FFFF"/>
        <READ value="(?i)(FLOOR_DESCEND|CEIL_DESCEND|FLOOR_ASCEND|FLOOR_LIFTED|CEIL_ASCEND|CEIL_LIFTED|TRANSPARENT|CANDELABER|DIAPHANOUS|IMMATERIAL|IMPASSABLE|PORTCULLIS|AUTORANGE|CAREFULLY|CONDENSED|INVISIBLE|SENSITIVE|BERKELEY|CENTER_X|CENTER_Y|LIGHTMAP|PASSABLE|SAVE_ALL|CLUSTER|CURTAIN|FRAGILE|NO_CLIP|ONESHOT|REFRESH|VISIBLE|ABSPOS|BEHIND|GROUND|LIFTED|MASTER|NARROW|RELPOS|SHADOW|STICKY|FENCE|GHOST|LIBER|MOVED|SLOOP|BASE|BLUR|CLIP|FLAT|HARD|PLAY|SEEN|WIRE|FAR|SKY)" token="flag" color="#E1FFFF"/>
        <READ value="(?i)(ALBEDO|ANGLE|ASPEED|ATTACH|BELOW|BMAPS|BUTTON|CEIL_(ANGLE|OFFS_[X-Y]|TEX)|CYCLES|CYCLE|DEFAULT|DELAY|DIGITS|DISTANCE|DIST|EACH_CYCLE_(C|F)|EACH_CYCLE|FLAGS|FLOOR_(ANGLE|OFFS_[X-Y]|TEX)|FOOT_HGT|FRAME|GENIUS|HBAR|HEIGHT|HSLIDER|IF_(ARISE|ARRIVED|DIVE|FAR|LEAVE|NEAR|RELEASE|TOUCH)|INDEX|LAYER|LEFT|LENGTH|MAP_COLOR|MASK|MAX|MIN|MIRROR|OFFSET_[X-Y]|OVLYS|PALFILE|PAN_MAP|PICTURE|POSITION|POS_[X-Y]|RADIANCE|RANGE|REL_(ANGLE|DIST)|RIGHT|SCALE_(XY|X|Y)|SCYCLES|SCYCLE|SCALE|SDIST|SIDES|SIDE|SIZE_[X-Y]|SKILL[1-8]|SPEED|STRINGS|SVDIST|SVOL|TARGET_(MAP|X|Y)|TARGET|TEXTURE[1-4]|THING_HGT|TITLE|TOP|TOUCH|TYPE|VAL|VBAR|VSLIDER|VSPEED|WAYPOINT|WINDOW|[X-Z][1-2]|[X-Z])" token="property" color="#E1FFFF"/>
        <READ value="(?i)(ACCEL|ADD_STRING|ADDT|ADD|AND|BEEP|BRANCH|BREAK|CALL|DROP|END|EXCLUSIVE|EXEC_RULES|EXIT|EXPLODE|FADE_PAL|FIND|FREEZE|GETMIDI|GOTO|IF_(ABOVE|BELOW|EQUAL|MAX|MIN|NEQUAL)|INKEY|INPORT|LEVEL|LIFT|LOAD_INFO|LOAD|LOCATE|MAP|MIDI_COM|NEXT_(MY_THERE|MY|THERE)|NOP|OUTPORT|PLACE|PLAY_(CD|DEMO|FLICFILE|FLIC|SONG_ONCE|SONG|SOUNDFILE|SOUND)|PRINTFILE|PRINT_(STRING|VALUE)|PUSH|RANDOMIZE|ROTATE|SAVE_(DEMO|INFO)|SCAN|SCREENSHOT|SETMIDI|SET_(ALL|INFO|SKILL|STRING)|SET|SHAKE|SHIFT|SHOOT|SKIP|STOP_(DEMO|FLIC|SOUND)|SUBT|SUB|TILT|TO_STRING|WAITT|WAIT_TICKS|WAIT)" token="command" color="#E1FFFF"/>
        <READ value="(?i)((EACH_TICK|EACH_SEC|PANELS|LAYERS|MESSAGES)\.(1[0-6]|[1-9]))" token="list" color="#E1FFFF"/>
        <READ value="(?i)(ACCELERATION|ACTIONS|ACTIVE_(NEXUS|OBJTICKS|TARGETS)|ACTOR_(CEIL_HGT|CLIMB|DIST|FLOOR_HGT|IMPACT_V[X-Z]|WIDTH)|APPEND_MODE|ASPECT|BLUR_MODE|BOUNCE_V[X-Y]|CDAUDIO_VOL|CD_TRACK|CHANNEL_[0-7]|CHANNEL|CLIPPED|CLIPPING|COLOR_(ACTORS|BORDER|PLAYER|THINGS|WALLS)|DARK_DIST|DEBUG_MODE|DELTA_ANGLE|ERROR|FLIC_FRAME|FLOOR_MODE|FORCE_(AHEAD|ROT|STRAFE|TILT|UP)|FRAME_COLOR|FRICTION|HALF_PI|HIT_(DIST|MINDIST|X|Y)|IMPACT_V(ROT|[X-Z])|INERTIA|INV_DIST|JOYSTICK_[X-Y]|JOY_(4|SENSE)|KEY_(ALT|ANY|APO|BKSL|BKSP|BRACKL|BRACKR|CAL|CAR|COMMA|CTRL|CUD|CUL|CUR|CUU|DEL|END|ENTER|EQUALS|ESC|HOME|INS|JOY4|MINUS|PAUSE|PERIOD|PGDN|PGUP|PLUS|SEMIC|SENSE|SHIFT|SLASH|SPACE|SZ|TAB|F(1[0-2]|[1-9])|[A-Z0-9])|LIGHT_DIST|LOAD_MODE|MAP_(CENTER[X-Y]|(EDGE_[X-Y][1-2])|LAYER|MAX[X-Y]|MIN[X-Y]|MODE|OFFS[X-Y]|ROT|SCALE)|MAX_DIST|MICKEY_[X-Y]|MINV_DIST|MOTION_BLUR|MOUSE_(ANGLE|CALM|LEFT|MIDDLE|MODE|MOVING|RIGHT|SENSE|TIME|X|Y)|MOVE_(ANGLE|MODE)|MUSIC_VOL|MY_(X[1-2]|Y[1-2]|Z[1-2]|X|Y)|PANEL_LAYER|PI|PLAYER_(ANGLE|ARC|CLIMB|COS|DEPTH|HGT|LAST_[X-Y]|LIGHT|MSIN|SIN|SIZE|SPEED|TILT|VROT|V[X-Z]|WIDTH|[X-Z])|PSOUND_(TONE|VOL)|REAL_SPEED|REMOTE_[0-1]|RENDER_MODE|SCREEN_(HGT|WIDTH|X|Y)|SECS|SHIFT_SENSE|SHOOT_(ANGLE|FAC|RANGE|SECTOR|X|Y)|SKIP_FRAMES|SKY_OFFS_[X-Y]|SLOPE_(AHEAD|SIDE|X|Y)|SOUND_VOL|SPANS|STEPS|STR_LEN|TEXT_LAYER|THING_(DIST|WIDTH)|TICKS|TIME_(ACTIONS|CLIPPING|CORR|DRAW|FAC|FBUFFER|SLICES|TARGETS|VERTICES)|TOUCH_(DIST|MODE|RANGE|STATE)|TWO_PI|WALK_(PERIOD|TIME)|WALK|WAVE_PERIOD|WAVE|PALANIM_DELAY)" token="skill" color="#E1FFFF"/>
        <READ value="(?i)(THERE|MY|HIT|TOUCH_TEXT|TOUCHED|TOUCH_TEX|TOUCH_REG|COMMAND_LINE|REGION[1-8])" token="synonym" color="#E1FFFF"/>
        <READ value="(?i)CLIP_DIST" token="ambigChar95globalChar95property" color="#E1FFFF"/>
        <READ value="(?i)(EACH_TICK|IF_ENTER|IF_HIT|IF_KLICK)" token="ambigChar95eventChar95property" color="#E1FFFF"/>
        <READ value="(?i)(THING|ACTOR)" token="ambigChar95objectChar95flag" color="#E1FFFF"/>
        <READ value="(?i)(SIN|ASIN|SQRT|ABS)" token="ambigChar95mathChar95command" color="#E1FFFF"/>
        <READ value="(?i)RANDOM" token="ambigChar95mathChar95skillChar95property" color="#E1FFFF"/>
        <READ value="(?i)HERE" token="ambigChar95synonymChar95flag" color="#E1FFFF"/>
        <READ value="(?i)(FLOOR_HGT|CEIL_HGT|AMBIENT|RESULT|NODE)" token="ambigChar95skillChar95property" color="#E1FFFF"/>
        <READ value="(?i)SAVE" token="ambigChar95commandChar95flag" color="#E1FFFF"/>
        <READ value="(?i)MSPRITE" token="ambigChar95globalChar95synonymChar95property" color="#E1FFFF"/>
        <READ value="(?i)DO" token="ambigChar95commandChar95property" color="#E1FFFF"/>
        <READ value="(?i)(FLAG[1-8])" token="ambigChar95skillChar95flag" color="#E1FFFF"/>
        <READ value="[0-9]+" token="integer" color="#E1FFFF"/>
        <READ value="([0-9]*\.[0-9]+)|([0-9]+\.[0-9]*)" token="fixed" color="#E1FFFF"/>
        <READ value="[A-Za-z0-9_][A-Za-z0-9_\?]*(\.[1-9][0-9]?)?" token="identifier" color="#E1FFFF"/>
        <READ value="&lt;[\s]?[^&lt;;:&quot; ]+\.[^&lt;;:&quot; ]+[\s]?&gt;" token="file" color="#E1FFFF"/>
        <READ value="&quot;(\\&quot;|.|[\r\n])*?&quot;" token="string" color="#E1FFFF"/>
        <READ value="[\r\n\t\s\x00,]|:=|(#.*(\n|$))|(//.*(\n|$))|(/\*(.|[\r\n])*?\*/)" token="IGNORE" color="#E1FFFF"/>
    </SCANNER>
    <GLOBALCODE>
        
    </GLOBALCODE>
    <RULES>
        <RULE name="Start" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Sections"/>
                <CODE>
                    $$ = $1;
if (DeserializeOutput)
   Output.WriteLine(Script.Format(Scriptname, $$));
else
    Output.Write($$);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Sections" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Section"/>
                <RULE name="Sections"/>
                <CODE>
                    $$ = $1 + $2;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Keyword"/>
                <CODE>
                    $$ = ""; //bogus keyword at EOF - just discard

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <CODE>
                    $$ = "";

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Section" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = "";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char123"/>
                <CODE>
                    $$ = Sections.AddDummySection($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char125"/>
                <CODE>
                    $$ = Sections.AddDummySection($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="GlobalDef"/>
                <CODE>
                    $$ = Sections.AddGlobalSection($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Preprocessor"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Include"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="FunctionDef"/>
                <CODE>
                    $$ = Sections.AddActionSection($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="ObjectDef"/>
                <CODE>
                    $$ = Sections.AddObjectSection($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Define"/>
                <CODE>
                    $$ = Sections.AddDefineSection($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="AssetDef"/>
                <CODE>
                    $$ = Sections.AddAssetSection($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Preprocessor" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="IFDEF"/>
                <RULE name="DefIdentifier"/>
                <TOKEN name="Char59"/>
                <RULE name="PreprocessorSection"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Sections.CreatePreProcIfCondition($2, $4);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="IFNDEF"/>
                <RULE name="DefIdentifier"/>
                <TOKEN name="Char59"/>
                <RULE name="PreprocessorSection"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Sections.CreatePreProcIfNotCondition($2, $4);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="PreprocessorSection" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Sections"/>
                <TOKEN name="IFELSE"/>
                <TOKEN name="Char59"/>
                <RULE name="Sections"/>
                <TOKEN name="ENDIF"/>
                <CODE>
                    $$ = Sections.CreatePreProcElseCondition($1, $4);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Sections"/>
                <TOKEN name="ENDIF"/>
                <CODE>
                    $$ = Sections.CreatePreProcEndCondition($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="PreprocInst" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="IFDEF"/>
                <RULE name="DefIdentifier"/>
                <RULE name="PreprocInstSection"/>
                <CODE>
                    $$ = Actions.CreatePreProcIfCondition($2, $3);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="IFNDEF"/>
                <RULE name="DefIdentifier"/>
                <RULE name="PreprocInstSection"/>
                <CODE>
                    $$ = Actions.CreatePreProcIfNotCondition($2, $3);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="PreprocInstSection" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Instructions"/>
                <TOKEN name="IFELSE"/>
                <RULE name="Instructions"/>
                <TOKEN name="ENDIF"/>
                <CODE>
                    $$ = Actions.CreatePreProcElseCondition($1, $3);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Instructions"/>
                <TOKEN name="ENDIF"/>
                <CODE>
                    $$ = Actions.CreatePreProcEndCondition($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="PreprocProp" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="IFDEF"/>
                <RULE name="DefIdentifier"/>
                <TOKEN name="Char59"/>
                <RULE name="PreprocPropSection"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Objects.CreatePreProcIfCondition($2, $4);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="IFNDEF"/>
                <RULE name="DefIdentifier"/>
                <TOKEN name="Char59"/>
                <RULE name="PreprocPropSection"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Objects.CreatePreProcIfNotCondition($2, $4);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="PreprocPropSection" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="PropertyDefs"/>
                <TOKEN name="IFELSE"/>
                <TOKEN name="Char59"/>
                <RULE name="PropertyDefs"/>
                <TOKEN name="ENDIF"/>
                <CODE>
                    $$ = Objects.CreatePreProcElseCondition($1, $4);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="PropertyDefs"/>
                <TOKEN name="ENDIF"/>
                <CODE>
                    $$ = Objects.CreatePreProcEndCondition($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Define" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="DEFINE"/>
                <RULE name="DefIdentifier"/>
                <RULE name="DefParameter"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Defines.AddTransform($2);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="DEFINE"/>
                <RULE name="DefIdentifier"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Defines.AddDefine($2);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="UNDEF"/>
                <RULE name="DefIdentifier"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Defines.RemoveDefine($2);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="DefIdentifier" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Skill"/>
                <CODE>
                    $$ = Formatter.FormatPreprocessor($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Identifier"/>
                <CODE>
                    $$ = Formatter.FormatPreprocessor($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="DefParameter" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="String"/>
                <CODE>
                    $$ = "";
Defines.AddStringDefine($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="List"/>
                <CODE>
                    $$ = "";
Defines.AddListDefine($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="File"/>
                <CODE>
                    $$ = "";
Defines.AddFileDefine($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Number"/>
                <CODE>
                    $$ = "";
Defines.AddNumberDefine($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="KeywordPar"/>
                <CODE>
                    $$ = "";
Defines.AddKeywordDefine($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Include" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="INCLUDE"/>
                <RULE name="File"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Include.Process($2);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="GlobalDef" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Event"/>
                <RULE name="ObjectIdList"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Globals.AddEvent($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Global"/>
                <RULE name="GlobalParameter"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Globals.AddGlobal($1, $2);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Global" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="ambigChar95globalChar95property"/>
                <CODE>
                    $$ = Formatter.FormatGlobal($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95globalChar95synonymChar95property"/>
                <CODE>
                    $$ = Formatter.FormatGlobal($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="global"/>
                <CODE>
                    $$ = Formatter.FormatGlobal($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Skill"/>
                <CODE>
                    $$ = Formatter.FormatTargetSkill($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Event" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="ambigChar95eventChar95property"/>
                <CODE>
                    $$ = Formatter.FormatEvent($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="event"/>
                <CODE>
                    $$ = Formatter.FormatEvent($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="ObjectIdList" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="ObjectId"/>
                <CODE>
                    $$ = "";
Globals.AddParameter($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="ObjectId"/>
                <RULE name="ObjectIdList"/>
                <CODE>
                    $$ = "";
Globals.AddParameter($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="GlobalParameter" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="String"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Identifier"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Number"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="File"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="AssetDef" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="AssetRef"/>
                <RULE name="AssetId"/>
                <RULE name="File"/>
                <RULE name="AssetParams"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Assets.AddAsset($1, $2, $3);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="AssetParams" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="AssetParam"/>
                <RULE name="AssetParams"/>
                <CODE>
                    $$ = "";
Assets.AddParameter($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <CODE>
                    $$ = "";

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="AssetParam" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Identifier"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Integer"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="AssetRef" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="asset"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="ObjectDef" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Object"/>
                <RULE name="ObjectId"/>
                <TOKEN name="Char123"/>
                <RULE name="PropertyDefs"/>
                <TOKEN name="Char125"/>
                <CODE>
                    $$ = Objects.AddObject($1, $2, $4);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Object"/>
                <RULE name="ObjectId"/>
                <RULE name="String"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Objects.AddStringObject($1, $2, $3);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Object"/>
                <RULE name="ObjectId"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Objects.AddObject($1, $2);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="ObjectRef" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="object"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Object" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="ambigChar95objectChar95flag"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="ObjectRef"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="PropertyDefs" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="PropertyDef"/>
                <RULE name="PropertyDefs"/>
                <CODE>
                    $$ = $1 + $2;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="PreprocProp"/>
                <RULE name="PropertyDefs"/>
                <CODE>
                    $$ = $1 + $2;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <CODE>
                    $$ = "";

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="PropertyDef" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Property"/>
                <RULE name="PropertyValueList"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Objects.CreateProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = "";

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="PropertyValueList" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="PropertyValue"/>
                <CODE>
                    Objects.AddPropertyValue($1);
$$ = "";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="PropertyValue"/>
                <RULE name="PropertyValueList"/>
                <CODE>
                    Objects.AddPropertyValue($1);
$$ = "";

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="PropertyValue" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="String"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="KeywordPar"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Number"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="File"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="FunctionDef" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Function"/>
                <RULE name="FunctionId"/>
                <TOKEN name="Char123"/>
                <RULE name="Instructions"/>
                <TOKEN name="Char125"/>
                <CODE>
                    $$ = Actions.AddAction($2, $4);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Function" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="function"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Instructions" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="identifier"/>
                <TOKEN name="Char59"/>
                <RULE name="Instructions"/>
                <CODE>
                    $$ = Actions.CreateMarker($1, $3);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char123"/>
                <RULE name="Instructions"/>
                <TOKEN name="Char125"/>
                <RULE name="Instructions"/>
                <CODE>
                    $$ = $2 + $4;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="GotoMarker"/>
                <TOKEN name="Char58"/>
                <RULE name="Instructions"/>
                <CODE>
                    $$ = Actions.CreateMarker($1, $3);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Flow"/>
                <RULE name="Instructions"/>
                <CODE>
                    $$ = $1 + $2;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="PreprocInst"/>
                <RULE name="Instructions"/>
                <CODE>
                    $$ = $1 + $2;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Instruction"/>
                <RULE name="Instructions"/>
                <CODE>
                    $$ = $1 + $2;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <CODE>
                    $$ = "";

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Instruction" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Command"/>
                <RULE name="ParameterList"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Actions.CreateInstruction($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Identifier"/>
                <RULE name="ParameterList"/>
                <TOKEN name="Char59"/>
                <CODE>
                    //Capture and discard bogus code
$$ = Actions.CreateInvalidInstruction($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Rule"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Command"/>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = Actions.CreateInstruction($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char59"/>
                <CODE>
                    $$ = "";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Define"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="ParameterList" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Parameter"/>
                <CODE>
                    $$ = "";
Actions.AddInstructionParameter($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Parameter"/>
                <RULE name="ParameterList"/>
                <CODE>
                    $$ = "";
Actions.AddInstructionParameter($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Parameter" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="KeywordPar"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="List"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="String"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Number"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="File"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Expression" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="LogicOr"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="LogicOr" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="LogicOr"/>
                <TOKEN name="Char124Char124"/>
                <RULE name="LogicAnd"/>
                <CODE>
                    $$ = $1 + " || " + $3;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="LogicAnd"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="LogicAnd" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="LogicAnd"/>
                <TOKEN name="Char38Char38"/>
                <RULE name="BitOr"/>
                <CODE>
                    $$ = $1 + " &amp;&amp; " + $3;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="BitOr"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="BitOr" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="BitOr"/>
                <TOKEN name="Char124"/>
                <RULE name="BitXor"/>
                <CODE>
                    $$ = $1 + " | " + $3;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="BitXor"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="BitXor" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="BitXor"/>
                <TOKEN name="Char94"/>
                <RULE name="BitAnd"/>
                <CODE>
                    $$ = $1 + " ^ " + $3;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="BitAnd"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="BitAnd" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="BitAnd"/>
                <TOKEN name="Char38"/>
                <RULE name="Equality"/>
                <CODE>
                    $$ = $1 + " &amp; " + $3;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Equality"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Equality" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Comparison"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Equality"/>
                <RULE name="OpEq"/>
                <RULE name="Comparison"/>
                <CODE>
                    $$ = $1 + $2 + $3;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Comparison" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Term"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Comparison"/>
                <RULE name="OpCmp"/>
                <RULE name="Term"/>
                <CODE>
                    $$ = $1 + $2 + $3;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Term" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Factor"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Term"/>
                <RULE name="OpTerm"/>
                <RULE name="Factor"/>
                <CODE>
                    $$ = $1 + $2 + $3;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Factor" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Unary"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Factor"/>
                <RULE name="OpFac"/>
                <RULE name="Unary"/>
                <CODE>
                    $$ = $1 + $2 + $3;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Unary" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Primary"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="OpUn"/>
                <RULE name="Unary"/>
                <CODE>
                    $$ = $1 + $2;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Primary" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="integer"/>
                <TOKEN name="integer"/>
                <CODE>
                    //$$ = $1 + "." + $2); //fixes things like "18,4"
Console.WriteLine("(W) PARSER discarded superfluous token in expression: , " + $2);
$$ = $1; //this is what supposedly happens in A3

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Math"/>
                <TOKEN name="Char40"/>
                <RULE name="Expression"/>
                <TOKEN name="Char41"/>
                <CODE>
                    $$ = Formatter.FormatMath($1) + "(" + $3 + ")";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char40"/>
                <RULE name="Expression"/>
                <TOKEN name="Char41"/>
                <CODE>
                    $$ = "(" + $2 + ")";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Keyword"/>
                <TOKEN name="integer"/>
                <CODE>
                    //$$ = Formatter.FormatTargetSkill($1 + $2); //fixes things like "Skill 6"
Console.WriteLine("(W) PARSER discarded superfluous token in expression: " + $1);
$$ = $2; //this is what supposedly happens in A3

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="UnNumber"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Keyword"/>
                <CODE>
                    $$ = Formatter.FormatTargetSkill($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="List"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="OpEq" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="Char33Char61"/>
                <CODE>
                    $$ = " != ";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char61Char61"/>
                <CODE>
                    $$ = " == ";

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="OpCmp" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="Char60"/>
                <CODE>
                    $$ = " &lt; ";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char60Char61"/>
                <CODE>
                    $$ = " &lt;= ";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char62"/>
                <CODE>
                    $$ = " &gt; ";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char62Char61"/>
                <CODE>
                    $$ = " &gt;= ";

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="OpTerm" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="Char43"/>
                <CODE>
                    $$ = " + ";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char45"/>
                <CODE>
                    $$ = " - ";

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="OpFac" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="Char37"/>
                <CODE>
                    $$ = " % ";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char42"/>
                <CODE>
                    $$ = " * ";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char47"/>
                <CODE>
                    $$ = " / ";

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="OpUn" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="Char33"/>
                <CODE>
                    $$ = "!";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char43"/>
                <CODE>
                    $$ = "+";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char45"/>
                <CODE>
                    $$ = "-";

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Rule" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="RULE"/>
                <RULE name="Expression"/>
                <CODE>
                    //$$ = $1 + $2;
$$ = Actions.CreateExpression($2);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="RULE"/>
                <RULE name="Keyword"/>
                <RULE name="OpAssign"/>
                <RULE name="Expression"/>
                <CODE>
                    //$$ = $1 + $2 + $3 + $4;
$$ = Actions.CreateExpression(Formatter.FormatExpression($2, $3, $4));

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Keyword"/>
                <RULE name="OpAssign"/>
                <RULE name="Expression"/>
                <CODE>
                    //$$ = $1 + $2 + $3;
$$ = Actions.CreateExpression(Formatter.FormatExpression($1, $2, $3));

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="OpAssign" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="Char42Char61"/>
                <CODE>
                    $$ = " *= ";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char43Char61"/>
                <CODE>
                    $$ = " += ";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char45Char61"/>
                <CODE>
                    $$ = " -= ";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char47Char61"/>
                <CODE>
                    $$ = " /= ";

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="Char61"/>
                <CODE>
                    $$ = " = ";

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Math" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="ambigChar95mathChar95command"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95mathChar95skillChar95property"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="math"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Flow" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="ELSE"/>
                <TOKEN name="Char123"/>
                <RULE name="Instructions"/>
                <TOKEN name="Char125"/>
                <CODE>
                    $$ = Actions.CreateElseCondition($3);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="IF"/>
                <RULE name="Expression"/>
                <TOKEN name="Char123"/>
                <RULE name="Instructions"/>
                <TOKEN name="Char125"/>
                <CODE>
                    $$ = Actions.CreateIfCondition($2, $4);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="WHILE"/>
                <RULE name="Expression"/>
                <TOKEN name="Char123"/>
                <RULE name="Instructions"/>
                <TOKEN name="Char125"/>
                <CODE>
                    $$ = Actions.CreateWhileCondition($2, $4);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Keyword" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="BasicKeyword"/>
                <TOKEN name="Char46"/>
                <RULE name="Flag"/>
                <CODE>
                    $$ = $1 + "." + $3;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="BasicKeyword"/>
                <TOKEN name="Char46"/>
                <RULE name="Property"/>
                <CODE>
                    $$ = $1 + "." + $3;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="BasicKeyword"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="KeywordPar" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Keyword"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="OpUn"/>
                <RULE name="Keyword"/>
                <CODE>
                    $$ = $1 + $2;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Flag" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="ambigChar95commandChar95flag"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95objectChar95flag"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95skillChar95flag"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95synonymChar95flag"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="flag"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Property" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="ambigChar95commandChar95property"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95eventChar95property"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95globalChar95property"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95globalChar95synonymChar95property"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95mathChar95skillChar95property"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95skillChar95property"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="property"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Identifier"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="ObjectRef"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="AssetRef"/>
                <CODE>
                    $$ = Formatter.FormatProperty($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Command" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="ELSE"/>
                <CODE>
                    $$ = Formatter.FormatCommand($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95commandChar95flag"/>
                <CODE>
                    $$ = Formatter.FormatCommand($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95commandChar95property"/>
                <CODE>
                    $$ = Formatter.FormatCommand($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95mathChar95command"/>
                <CODE>
                    $$ = Formatter.FormatCommand($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="command"/>
                <CODE>
                    $$ = Formatter.FormatCommand($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Number" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="Fixed"/>
                <CODE>
                    $$ = Formatter.FormatNumber($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Integer"/>
                <CODE>
                    $$ = Formatter.FormatNumber($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="UnNumber" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="fixed"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="integer"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Integer" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="OpUn"/>
                <TOKEN name="integer"/>
                <CODE>
                    $$ = $1 + $2;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="integer"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Fixed" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="OpUn"/>
                <TOKEN name="fixed"/>
                <CODE>
                    $$ = $1 + $2;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="fixed"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Identifier" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="identifier"/>
                <CODE>
                    $$ = Formatter.FormatIdentifier($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="List" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="list"/>
                <CODE>
                    $$ = Formatter.FormatList($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="Skill" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="ambigChar95mathChar95skillChar95property"/>
                <CODE>
                    $$ = Formatter.FormatSkill($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95skillChar95property"/>
                <CODE>
                    $$ = Formatter.FormatSkill($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="skill"/>
                <CODE>
                    $$ = Formatter.FormatSkill($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="EngineKeywords" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="ambigChar95commandChar95flag"/>
                <CODE>
                    $$ = Formatter.FormatIdentifier($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95commandChar95property"/>
                <CODE>
                    $$ = Formatter.FormatIdentifier($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95eventChar95property"/>
                <CODE>
                    $$ = Formatter.FormatEvent($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95globalChar95property"/>
                <CODE>
                    $$ = Formatter.FormatGlobal($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95mathChar95command"/>
                <CODE>
                    $$ = Formatter.FormatIdentifier($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95objectChar95flag"/>
                <CODE>
                    $$ = Formatter.FormatIdentifier($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="asset"/>
                <CODE>
                    $$ = Formatter.FormatIdentifier($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="command"/>
                <CODE>
                    $$ = Formatter.FormatIdentifier($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="event"/>
                <CODE>
                    $$ = Formatter.FormatEvent($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="flag"/>
                <CODE>
                    $$ = Formatter.FormatIdentifier($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="function"/>
                <CODE>
                    $$ = Formatter.FormatIdentifier($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="global"/>
                <CODE>
                    $$ = Formatter.FormatGlobal($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="math"/>
                <CODE>
                    $$ = Formatter.FormatIdentifier($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="object"/>
                <CODE>
                    $$ = Formatter.FormatIdentifier($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="property"/>
                <CODE>
                    $$ = Formatter.FormatIdentifier($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="EngineObjects" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="ambigChar95globalChar95synonymChar95property"/>
                <CODE>
                    $$ = Formatter.FormatGlobal($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95mathChar95skillChar95property"/>
                <CODE>
                    $$ = Formatter.FormatSkill($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95skillChar95flag"/>
                <CODE>
                    $$ = Formatter.FormatSkill($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95skillChar95property"/>
                <CODE>
                    $$ = Formatter.FormatSkill($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="ambigChar95synonymChar95flag"/>
                <CODE>
                    $$ = Formatter.FormatGlobal($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="skill"/>
                <CODE>
                    $$ = Formatter.FormatSkill($1);

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="synonym"/>
                <CODE>
                    $$ = Formatter.FormatGlobal($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="BasicKeyword" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="NULL"/>
                <CODE>
                    $$ = Formatter.FormatNull();

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="Identifier"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="EngineKeywords"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="EngineObjects"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="HackKeyword" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="identifier"/>
                <TOKEN name="Char45"/>
                <TOKEN name="identifier"/>
                <CODE>
                    $$ = $1 + $3;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <TOKEN name="identifier"/>
                <TOKEN name="Char45"/>
                <TOKEN name="integer"/>
                <CODE>
                    $$ = $1 + $3;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="BasicKeyword"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="ObjectId" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="HackKeyword"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="FunctionId" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="HackKeyword"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="AssetId" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="integer"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
            <RIGHTSIDE>
                <RULE name="HackKeyword"/>
                <CODE>
                    $$ = $1;

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="GotoMarker" color="#FFE1FF">
            <RIGHTSIDE>
                <RULE name="BasicKeyword"/>
                <CODE>
                    $$ = $1; //TODO: FormatIdentifier?

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="File" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="file"/>
                <CODE>
                    $$ = Formatter.FormatFile($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
        <RULE name="String" color="#FFE1FF">
            <RIGHTSIDE>
                <TOKEN name="string"/>
                <CODE>
                    $$ = Formatter.FormatString($1);

                </CODE>
            </RIGHTSIDE>
        </RULE>
    </RULES>
</VCC>

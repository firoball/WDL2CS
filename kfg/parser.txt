Code -> TopSection Code | TopSection
TopSection -> Preprocessor | Section
Preprocessor -> IFDEF Identifier ; PreprocessorSection | IFNDEF Identifier ; PreprocessorSection 
PreprocessorSection -> Section ENDIF; | Section IFELSE; Section ENDIF;
Section -> SimpleItem | ComplexItem | Define | Predefined

Define -> DEFINE Identifier , NumberOnly ; | DEFINE Identifier , Keyword ; | DEFINE Identifier ;

Predefined -> Identifier PredefinedParameter ;
PredefinedParameter -> NumberOnly | File | String | Keyword

SimpleItem -> Identifier Identifier , SimpleParameters ;
SimpleParameters -> String | File | File , Number , Number | File , Number , Number , Number , Number

ComplexItem -> Identifier Identifier { Instructions }
Instructions -> Instruction ; Instructions | Identifier : Instructions | Flow Instructions | EPSILON
Instruction -> Identifier | ComplexParameters | F | S | FS | SS | SN | SK | FN | FNN | Calc
ComplexParameters -> Identifier ComplexParameterList
ComplexParameterList -> ComplexParameter , ComplexParameterList | ComplexParameter
ComplexParameter -> NumberOnly | Keyword

F -> Identifier File
S -> Identifier String
FS -> Identifier File , String
SS -> Identifier String , String
SN -> Identifier String , NumberOnly
SK -> Identifier String , Keyword
FN -> Identifier File , Number
FNN -> Identifier File , Number , Number

Calc -> Identifier Keyword Assign Expression
Expression -> Expr | Expression Op ExpressionRight | ( Expression )
ExpressionRight -> Expr | ( Expression )
Expr -> NumberOnly | OptionalSign Keyword | OptionalSign Math ( Expression )
Op -> OpPM | * | / | % | '|' | ^ | & 
OpPM -> + | -
Assign -> = | += | -= | *= | /=
Math -> SIN | COS | TAN | ASIN | ACOS | SQRT | SIGN | ABS | INT | EXP | LOG | LOG10 | LOG2 | RANDOM

Flow -> IF ( Comparison ) { Instructions } | IF ( Comparison ) { Instructions } ELSE { Instructions } | WHILE ( Comparison ) { Instructions }
Comparison -> Comparison Cmp ComparisonRight | ( ComparisonNoExpr ) | Expression
ComparisonRight -> ( ComparisonNoExpr ) | Expression
%fix reduce/shift conflict with () in Comparison and Expression nesting
ComparisonNoExpr -> Comparison Cmp ComparisonRight | ( ComparisonNoExpr )
Cmp -> '||' | && | != | == | <= | >= | < | >

Keyword -> Identifier | Identifier . Identifier

%Math function identifiers are ambiguous in original WDL syntax. can be value/variable as well as math function
Identifier -> identifier | Math 

%Resolve ambiguity of +/- operators in math expressions
OptionalSign -> OpPM | EPSILON

%avoid reduce/shift conflicts - use NumberOnly if Identifier is already handled via parallel Keyword path
NumberOnly -> OptionalSign number 
Number -> NumberOnly | Identifier

%Complex Regex terminals must be added at end of token list
File -> file
String -> string

%Compatibility patches - WDL parser allowed syntax violating the specification
%WDL parser allows leaving/adding commas
SimpleItem -> Identifier Identifier SimpleParameters ;
ComplexParameters -> Identifier , ComplexParameterList
ComplexParameterList -> ComplexParameter ComplexParameterList | ComplexParameter
%WDL parser allows IF/WHILE without enclosing parantheses
IfWhilePatch -> ( Comparison ) Cmp ( Comparison ) | ( Comparison ) Cmp IfWhilePatch
Flow -> IF IfWhilePatch { Instructions } | IfWhilePatch { Instructions } ELSE { Instructions } | WHILE IfWhilePatch { Instructions }